//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApplicationService.ResultService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ResultServiceSoap", Namespace="dse.webservices")]
    public partial class ResultService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getUpdatedResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkStudentInResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDegreeListOperationCompleted;
        
        /// CodeRemarks
        public ResultService() {
            this.Url = "http://127.0.0.1:8020/ResultService.asmx";
        }
        
        public ResultService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event getUpdatedResultCompletedEventHandler getUpdatedResultCompleted;
        
        /// CodeRemarks
        public event checkStudentInResultCompletedEventHandler checkStudentInResultCompleted;
        
        /// CodeRemarks
        public event getDegreeListCompletedEventHandler getDegreeListCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("dse.webservices/getUpdatedResult", RequestNamespace="dse.webservices", ResponseNamespace="dse.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result getUpdatedResult(string regNum, int degreeId) {
            object[] results = this.Invoke("getUpdatedResult", new object[] {
                        regNum,
                        degreeId});
            return ((Result)(results[0]));
        }
        
        /// CodeRemarks
        public void getUpdatedResultAsync(string regNum, int degreeId) {
            this.getUpdatedResultAsync(regNum, degreeId, null);
        }
        
        /// CodeRemarks
        public void getUpdatedResultAsync(string regNum, int degreeId, object userState) {
            if ((this.getUpdatedResultOperationCompleted == null)) {
                this.getUpdatedResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUpdatedResultOperationCompleted);
            }
            this.InvokeAsync("getUpdatedResult", new object[] {
                        regNum,
                        degreeId}, this.getUpdatedResultOperationCompleted, userState);
        }
        
        private void OngetUpdatedResultOperationCompleted(object arg) {
            if ((this.getUpdatedResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUpdatedResultCompleted(this, new getUpdatedResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("dse.webservices/checkStudentInResult", RequestNamespace="dse.webservices", ResponseNamespace="dse.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkStudentInResult(string regNum, int degreeId) {
            object[] results = this.Invoke("checkStudentInResult", new object[] {
                        regNum,
                        degreeId});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void checkStudentInResultAsync(string regNum, int degreeId) {
            this.checkStudentInResultAsync(regNum, degreeId, null);
        }
        
        /// CodeRemarks
        public void checkStudentInResultAsync(string regNum, int degreeId, object userState) {
            if ((this.checkStudentInResultOperationCompleted == null)) {
                this.checkStudentInResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckStudentInResultOperationCompleted);
            }
            this.InvokeAsync("checkStudentInResult", new object[] {
                        regNum,
                        degreeId}, this.checkStudentInResultOperationCompleted, userState);
        }
        
        private void OncheckStudentInResultOperationCompleted(object arg) {
            if ((this.checkStudentInResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkStudentInResultCompleted(this, new checkStudentInResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("dse.webservices/getDegreeList", RequestNamespace="dse.webservices", ResponseNamespace="dse.webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Degree[] getDegreeList() {
            object[] results = this.Invoke("getDegreeList", new object[0]);
            return ((Degree[])(results[0]));
        }
        
        /// CodeRemarks
        public void getDegreeListAsync() {
            this.getDegreeListAsync(null);
        }
        
        /// CodeRemarks
        public void getDegreeListAsync(object userState) {
            if ((this.getDegreeListOperationCompleted == null)) {
                this.getDegreeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDegreeListOperationCompleted);
            }
            this.InvokeAsync("getDegreeList", new object[0], this.getDegreeListOperationCompleted, userState);
        }
        
        private void OngetDegreeListOperationCompleted(object arg) {
            if ((this.getDegreeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDegreeListCompleted(this, new getDegreeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="dse.webservices")]
    public partial class Result {
        
        /// <remarks/>
        public string regNum;
        
        /// <remarks/>
        public string degree;
        
        /// <remarks/>
        public float cgpa;
        
        /// <remarks/>
        public int passYear;
        
        /// <remarks/>
        public int semester;
        
        /// <remarks/>
        public int totalSemester;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="dse.webservices")]
    public partial class Degree {
        
        /// <remarks/>
        public int id;
        
        /// <remarks/>
        public string degree;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getUpdatedResultCompletedEventHandler(object sender, getUpdatedResultCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUpdatedResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUpdatedResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void checkStudentInResultCompletedEventHandler(object sender, checkStudentInResultCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkStudentInResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkStudentInResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getDegreeListCompletedEventHandler(object sender, getDegreeListCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDegreeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDegreeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public Degree[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Degree[])(this.results[0]));
            }
        }
    }
}
